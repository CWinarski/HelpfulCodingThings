Teach ourselves JavaScript and TypeScript
- work in hackerrank more
- go over labs
- treat painful afternoon as a kata: refine as technique. DO it over and over as much as possible
- Spring lexicon
- when a framework has a small footprint. you can download and go
- spring you have to get the config right
- spring boot has a small foot print
- JSON is a view

//WHAT IS THE LIFECYCLE OF A BEAN?
REST:
endpoints are public interfaces of your application
to scale you can't have one device have all the information
application cannot save state
restful applications can't remember anything
cache is in-memory database
liskov's substitution principle works in api

spring is a container
inside the container is bean
a bean is a POJO
only have to worry about the domain of the problem

logs are your best friend
because when something goes wrong it tells you and helps you
spring is a servlet: application runs as a program in a server
JAR- Java archive resource
your server is like tomcat

ports are like calling into an office and you need to go to an extension
each application needs it's own port

Spring is all about annotations


Spring is an MVC framework
SPring boot is plug and play

models, views, controllers, services, repository

independently set log level for everything individually
Debug log is if you want to see everything
MODULES are applications
IOC: inversion of control. You need to take control when you need to. You have to know what
- everything is going to happen. String container is in control. WHen you want to take control give annotation
- dependency add functionality
- don't add dependecy willy nilly
- annotations are powerful and deadly
- Security:
- throwing a dependency in a pom is the same as having those classes

with JPA you need to supply a default constructor because it goes through getters and setters
you can have the same endpoint as long as there is a different method calling it (post, get, etc)

with my SQL you have to set up tables in the data base but H2 does it for you
<!---
----> comments out the depe

@Configuration

groupid, artifactid, and version elements in the pom correspond to Maven's standard GAV coordinates
parent tag indicates we will be inheriting from the spring- boot-starter-parent POM

JSON JavaScript Object Notation


Spring boot
- resoruces are just relevant things for your projects
DAO class that gives info from datatbase