Regex stands for regular expressions

-A regular expression is a special sequence of characters that helps you to match
 or find other strings or sets of strings using a specialized syntax held in a pattern.
-they can be used to search, edit or manipulate text and data

- the regex package consists of:

    Pattern Class: a pattern object is a compiled representation of a regular expression.
                   The  pattern class provides no public constructors
                   To create a pattern you must first invoke one of its public static compile methods which then returns a pattern object.
                   These methods accept a regular expression as the first argument

    Matcher Class − A Matcher object is the engine that interprets the pattern and performs match operations against an input string.
                    Like the Pattern class, Matcher defines no public constructors.
                    You obtain a Matcher object by invoking the matcher() method on a Pattern object.

    PatternSyntaxException − A PatternSyntaxException object is an unchecked exception that indicates a syntax error in a regular expression pattern.

-------------CAPTURING GROUPS-------------------------
Capturing groups are a way to treat multiple characters as a single unit.
They are created by placing the characters to be grouped inside a set of parentheses.

For example, the regular expression (dog) creates a single group containing the letters "d", "o", and "g".

Capturing groups are numbered by counting their opening parentheses from the left to the right.
In the expression ((A)(B(C))), for example, there are four such groups

((A)(B(C)))
(A)
(B(C))
(C)
